node("buildserver") {
    def mvnHome
    def remote = [:]
    remote.name = 'deploy'
    remote.host = '54.237.68.249'
    remote.user = 'centos'
    remote.password = 'Rnstech@123'
    remote.allowAnyHosts = true

    stage('Preparation') { 
        git credentialsId: 'git-lab-server', url: 'https://gitlab.com/rns-devops/Maven-Java-Project.git'
        
        mvnHome = tool 'maven'
    }
    stage('Build') {
        withEnv(["MVN_HOME=$mvnHome"]) {
            if (isUnix()) {
                sh '"$MVN_HOME/bin/mvn" -Dmaven.test.failure.ignore clean package'
            } else {
                bat(/"%MVN_HOME%\bin\mvn" -Dmaven.test.failure.ignore clean package/)
            }
        }
    }
    stage('Results') {
        junit '**/target/surefire-reports/TEST-*.xml'
        archiveArtifacts 'target/*.war'
    }
    stage('deploy') {
        sh "mv target/*.war target/webapp.war"
        sshCommand remote: remote, command: "sh /opt/appserver/bin/shutdown.sh"
        sshPut remote: remote, from: 'target/webapp.war', into: '/opt/appserver/webapps/'
        sshCommand remote: remote, command: "sh /opt/appserver/bin/startup.sh"
    }
}
